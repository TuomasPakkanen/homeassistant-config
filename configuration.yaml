# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

### INCLUDES

homeassistant:
  customize: !include customize.yaml

group: !include groups.yaml
automation: !include_dir_merge_list automations/
#light: !include light.yaml # light groups managed in Deconz
#scene: !include scenes.yaml # scenes managed in Deconz and scripts
script: !include scripts.yaml

frontend:
  themes: !include_dir_merge_named themes

### RECORDER, HISTORY AND LOG SETUP

# Log levels
logger:
  default: info
  logs:
    homeassistant.setup: warning
    homeassistant.loader: error
    roomba.roomba.Roomba: warning
    pychromecast.socket_client: error
    homeassistant.components.cast: error
    homeassistant.components.cast.media_player: error
    pychromecast: error
    pychromecast.discovery: error
    custom_components.ble_monitor: debug

# Recorder
recorder:
  db_url: !secret mariadb_url
  purge_keep_days: 7
  exclude:
    entities:
      - binary_sensor.updater
      - sensor.last_boot
      - automation.health_check
      - sensor.time
      - sun.sun

# History
history:
  exclude:
    domains:
      - automation
      - group
      - persistent_notification
      - discovery
      - history_graph

# Logbook
# logbook: Currently no excludes

notify:
  - name: ALL_DEVICES
    platform: group
    services:
      - service: mobile_app_oneplus7t
      - service: mobile_app_iphone_moona

### INTEGRATIONS

ble_monitor:
  discovery: True
  decimals: 1
  period: 300
  devices:
    - mac: '58:2D:34:34:50:74'

# InfluxDB configuration
influxdb:
  username: !secret influxdb_username
  password: !secret influxdb_password
  max_retries: 3
  default_measurement: state
  include:
    domains:
      - sensor

# Health check: https://healthchecks.io/
rest_command:
  health_check:
    url: !secret health_check_url

# Spotify
spotify:
  client_id: !secret spotify_clientid
  client_secret: !secret spotify_clientsecret

spotcast:
  sp_dc: !secret sp_dc
  sp_key: !secret sp_key

# Circadian lightning for lights (HACS custom component), currently not used
# circadian_lighting:

# Apple HomeKit
homekit:
  filter:
    include_domains:
      - media_player
      - script
    include_entities:
      - light.living_room_lights
      - light.hallway_lights
      - light.hallway_upstairs_lights
      - light.bedroom_lights
      - light.kitchen_lights
      - light.tripod_lamp
      - light.media_room_lights
      - light.laundry_room_lights
      - climate.air_conditioner
      - vacuum.watson
      - input_boolean.guest_mode
      - input_boolean.bedroom_presence
      - input_boolean.vacation_mode
      - sensor.ble_temperature_582d34345074
      - sensor.ble_humidity_582d34345074
      - sensor.porch
      - sensor.porch_2
      - sensor.sauna

### SWITCHES ###
switch:
  - platform: template
    switches:
      ac:
        friendly_name: "AC"
        value_template: "{{ is_state('climate.air_conditioner', 'heat_cool') or is_state('climate.air_conditioner', 'heat') or is_state('climate.air_conditioner', 'dry') or is_state('climate.air_conditioner', 'fan_only') or is_state('climate.air_conditioner', 'cool') }}"
        turn_on:
          - service: climate.set_temperature
            entity_id: climate.air_conditioner
            data:
              temperature: '23'
          - service: climate.set_fan_mode
            entity_id: climate.air_conditioner
            data:
              fan_mode: 'auto'
          - service: climate.set_hvac_mode
            data:
              entity_id: climate.air_conditioner
              hvac_mode: 'heat_cool'
          - service: climate.set_swing_mode
            entity_id: climate.air_conditioner
            data:
              swing_mode: '3'
        turn_off:
          service: climate.set_hvac_mode
          data:
            entity_id: climate.air_conditioner
            hvac_mode: 'off'
      roomba:
        friendly_name: "Roomba"
        value_template: "{{ is_state('vacuum.watson', 'cleaning') }}"
        turn_on:
          service: vacuum.start
          entity_id: vacuum.watson
        turn_off:
          service: vacuum.return_to_base
          entity_id: vacuum.watson

### INPUT BOOLEANS ###
input_boolean:
  guest_mode:
    name: "Guest mode"
    icon: mdi:account-multiple
  vacation_mode:
    name: "Vacation mode"
    icon: mdi:beach
  sleeping:
    name: "Sleeping"
    icon: mdi:sleep
  bedroom_presence:
    name: "Bedroom presence"
    icon: mdi:bed

### SENSORS ###
binary_sensor:
  - platform: template
    sensors: 
      occupancy:
        value_template: "{{ is_state('group.people', 'home') }}"

sensor:
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: memory_use_percent
      - type: load_15m
      - type: processor_use
      - type: network_in
        arg: eth0
      - type: network_out
        arg: eth0
      - type: last_boot
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
  - platform: template
    sensors:
      outside_temperature:
        friendly_name: "Outside temperature"
        unit_of_measurement: '°C'
        value_template: "{{states.weather.home.attributes.temperature}}"
      ac_temperature:
        friendly_name: "AC Temperature"
        unit_of_measurement: '°C'
        value_template: "{{states.climate.air_conditioner.attributes.temperature}}"
      ac_state:
        friendly_name: "Air Conditioner state"
        value_template: "{{states.climate.air_conditioner.state}}"
      living_room_sensor_battery:
        friendly_name: Xiaomi Mijia battery
        unit_of_measurement: '%'
        value_template: '{{ state_attr("sensor.ble_temperature_582d34345074", "battery_level") }}'
  - platform: command_line
    name: "CPU Temperature"
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: '°C'
    value_template: '{{ value | multiply(0.001) | round(1) }}'