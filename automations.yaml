### LIGHT AUTOMATIONS ###

# IKEA REMOTE #

- alias: 'Toggle lamp from dimmer'
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: tradfri_remote_control
      event: 1002
  action:
    service: light.toggle
    entity_id: light.media_room

- alias: 'Increase brightness of lamp from dimmer'
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: tradfri_remote_control
      event: 2002
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.media_room
        brightness: >
          {% set bri = state_attr('light.media_room', 'brightness') | int %}
          {{ [bri+50, 255] | min }}

- alias: 'Decrease brightness of lamp from dimmer'
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: tradfri_remote_control
      event: 3002
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.media_room
        brightness: >
          {% set bri = state_attr('light.media_room', 'brightness') | int %}
          {{ [bri-50, 1] | max }}

- alias: 'Set color temperature of lamps to warmer'
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: tradfri_remote_control
      event: 5002
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.media_room
        color_temp: >
          {% set mired = state_attr('light.media_room', 'color_temp') | int %}
          {% if mired < 251 %} 370
          {% elif mired > 250 and mired < 371 %} 455
          {% else %} 250 {% endif %}

- alias: 'Set color temperature of lamps to colder'
  trigger:
    platform: event
    event_type: deconz_event
    event_data:
      id: tradfri_remote_control
      event: 4002
  action:
    - service: light.turn_on
      data_template:
        entity_id: light.media_room
        color_temp: >
          {% set mired = state_attr('light.media_room', 'color_temp') | int %}
          {% if mired > 454 %} 370
          {% elif mired > 250 and mired < 371 %} 250
          {% else %} 455 {% endif %}

# LIGHTS DURING THE DAY #

- alias: "Set table lamp brightness to max when turned on (day)"
  trigger:
    platform: state
    entity_id: light.table_lamp
    from: 'unavailable'
    to: 'on'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: sensor.daylight
        state: 'night_end'
      - condition: state
        entity_id: sensor.daylight
        state: 'nautical_dawn'
      - condition: state
        entity_id: sensor.daylight
        state: 'dawn'
      - condition: state
        entity_id: sensor.daylight
        state: 'sunrise_start'
      - condition: state
        entity_id: sensor.daylight
        state: 'sunrise_end'
      - condition: state
        entity_id: sensor.daylight
        state: 'golden_hour_1'
      - condition: state
        entity_id: sensor.daylight
        state: 'solar_noon'
  action:
    service: light.turn_on
    data:
      entity_id: light.table_lamp
      brightness_pct: 100
      kelvin: 4000

- alias: "Set tripod lamp brightness to max when turned on (day)"
  trigger:
    platform: state
    entity_id: light.tripod_lamp
    from: 'unavailable'
    to: 'on'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: sensor.daylight
        state: 'night_end'
      - condition: state
        entity_id: sensor.daylight
        state: 'nautical_dawn'
      - condition: state
        entity_id: sensor.daylight
        state: 'dawn'
      - condition: state
        entity_id: sensor.daylight
        state: 'sunrise_start'
      - condition: state
        entity_id: sensor.daylight
        state: 'sunrise_end'
      - condition: state
        entity_id: sensor.daylight
        state: 'golden_hour_1'
      - condition: state
        entity_id: sensor.daylight
        state: 'solar_noon'
  action:
    service: light.turn_on
    data:
      entity_id: light.tripod_lamp
      brightness_pct: 100
      kelvin: 4000

- alias: "Set feather lamp brightness to max when turned on (day)"
  trigger:
    platform: state
    entity_id: light.feather_lamp
    from: 'unavailable'
    to: 'on'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: sensor.daylight
        state: 'night_end'
      - condition: state
        entity_id: sensor.daylight
        state: 'nautical_dawn'
      - condition: state
        entity_id: sensor.daylight
        state: 'dawn'
      - condition: state
        entity_id: sensor.daylight
        state: 'sunrise_start'
      - condition: state
        entity_id: sensor.daylight
        state: 'sunrise_end'
      - condition: state
        entity_id: sensor.daylight
        state: 'golden_hour_1'
      - condition: state
        entity_id: sensor.daylight
        state: 'solar_noon'
  action:
    service: light.turn_on
    data:
      entity_id: light.feather_lamp
      brightness_pct: 100
      kelvin: 4000

# MORNING ROUTINE #

- alias: "Morning routine"
  trigger: 
    platform: state
    entity_id: binary_sensor.presence_3
    to: 'on'
  condition:
    - condition: time
      after: '07:00:00'
      before: '09:30:00'
    - condition: state
      entity_id: light.tripod_lamp
      state: 'off'
  action:
    - service: light.turn_on
      data:
        entity_id: light.tripod_lamp
        brightness_pct: 100
        kelvin: 4000
        transition: 15
    - service: tts.cloud_say
      entity_id: media_player.living_room
      data: 
        message: 'Good Morning'
    - delay: '00:00:05'
    - service: media_player.select_source
      data: 
        entity_id: media_player.living_room
        source: 'Radio Aalto 92.5 (Top 40 & Pop Music)'
    - service: media_player.volume_set
      data:
        entity_id: media_player.living_room
        volume_level: 0.20
    - service: media_player.turn_on
      data:
        entity_id: media_player.living_room
    

# LIGHTS DURING THE EVENING/NIGHT #

- alias: "Set table lamp brightness when turned on (evening)"
  trigger:
    platform: state
    entity_id: light.table_lamp
    from: 'unavailable'
    to: 'on'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: sensor.daylight
        state: 'golden_hour_2'
      - condition: state
        entity_id: sensor.daylight
        state: 'sunset_start'
      - condition: state
        entity_id: sensor.daylight
        state: 'sunset_end'
      - condition: state
        entity_id: sensor.daylight
        state: 'dusk'
      - condition: state
        entity_id: sensor.daylight
        state: 'nautical_dusk'
  action:
    service: light.turn_on
    data:
      entity_id: light.table_lamp
      brightness_pct: 80
      kelvin: 2700

- alias: "Set tripod lamp brightness when turned on (evening)"
  trigger:
    platform: state
    entity_id: light.tripod_lamp
    from: 'unavailable'
    to: 'on'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: sensor.daylight
        state: 'golden_hour_2'
      - condition: state
        entity_id: sensor.daylight
        state: 'sunset_start'
      - condition: state
        entity_id: sensor.daylight
        state: 'sunset_end'
      - condition: state
        entity_id: sensor.daylight
        state: 'dusk'
      - condition: state
        entity_id: sensor.daylight
        state: 'nautical_dusk'
  action:
    service: light.turn_on
    data:
      entity_id: light.tripod_lamp
      brightness_pct: 80
      kelvin: 2700

- alias: "Set feather lamp brightness when turned on (evening)"
  trigger:
    platform: state
    entity_id: light.feather_lamp
    from: 'unavailable'
    to: 'on'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: sensor.daylight
        state: 'golden_hour_2'
      - condition: state
        entity_id: sensor.daylight
        state: 'sunset_start'
      - condition: state
        entity_id: sensor.daylight
        state: 'sunset_end'
      - condition: state
        entity_id: sensor.daylight
        state: 'dusk'
      - condition: state
        entity_id: sensor.daylight
        state: 'nautical_dusk'
  action:
    service: light.turn_on
    data:
      entity_id: light.feather_lamp
      brightness_pct: 80
      kelvin: 2700

# CHANGE LIGHT TEMPERATURES AFTER SUNSET #

- alias: "Change table lamp temperature in the evening"
  trigger:
    platform: state
    entity_id: sensor.daylight
    to: 'golden_hour_2'
  condition:
    condition: state
    entity_id: light.table_lamp
    state: 'on'
  action:
    service: light.turn_on
    data:
      entity_id: light.table_lamp
      kelvin: 2700
      transition: 15

- alias: "Change tripod lamp temperature in the evening"
  trigger:
    platform: state
    entity_id: sensor.daylight
    to: 'golden_hour_2'
  condition:
    condition: state
    entity_id: light.tripod_lamp
    state: 'on'
  action:
    service: light.turn_on
    data:
      entity_id: light.tripod_lamp
      kelvin: 2700
      transition: 15

- alias: "Change feather lamp temperature in the evening"
  trigger:
    platform: state
    entity_id: sensor.daylight
    to: 'golden_hour_2'
  condition:
    condition: state
    entity_id: light.feather_lamp
    state: 'on'
  action:
    service: light.turn_on
    data:
      entity_id: light.feather_lamp
      kelvin: 2700
      transition: 15

# DIM LIGHTS AT 21:00 #

- alias: "Dim table lamp in the evening if on"
  trigger:
    platform: time
    at: '21:00'
  condition:
    condition: state
    entity_id: light.table_lamp
    state: 'on'
  action:
    service: light.turn_on
    data:
      entity_id: light.table_lamp
      brightness_pct: 60
      transition: 15

- alias: "Dim tripod lamp in the evening if on"
  trigger:
    platform: time
    at: '21:00'
  condition:
    condition: state
    entity_id: light.tripod_lamp
    state: 'on'
  action:
    service: light.turn_on
    data:
      entity_id: light.tripod_lamp
      brightness_pct: 60
      transition: 15

- alias: "Dim feather lamp in the evening if on"
  trigger:
    platform: time
    at: '21:00'
  condition:
    condition: state
    entity_id: light.feather_lamp
    state: 'on'
  action:
    service: light.turn_on
    data:
      entity_id: light.feather_lamp
      brightness_pct: 60
      transition: 15

# TURN ON LIVING ROOM LIGHTS WHEN SUN STARTS TO SET #

- alias: "Turn on living room lights automatically if home"
  trigger:
    platform: state
    entity_id: sensor.daylight
    to: 'golden_hour_2'
    for: "00:40:00"
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: person.moona
        state: 'home'
      - condition: state
        entity_id: person.tuomas_pakkanen 
        state: 'home'
  action:
    service: light.turn_on
    data:
      entity_id: light.living_room
      brightness_pct: 80
      kelvin: 2700
      transition: 5
    
# TURN ON TRIPOD LAMP WHEN COMING HOME IF DARK OUTSIDE #

- alias: "Turn on tripod lamp when coming home if it's dark outside"
  trigger: 
    - platform: state
      entity_id: person.tuomas_pakkanen
      to: 'home'
    - platform: state
      entity_id: person.moona
      to: 'home'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: sensor.daylight
        state: 'golden_hour_2'
      - condition: state
        entity_id: sensor.daylight
        state: 'sunset_start'
      - condition: state
        entity_id: sensor.daylight
        state: 'sunset_end'
      - condition: state
        entity_id: sensor.daylight
        state: 'dusk'
      - condition: state
        entity_id: sensor.daylight
        state: 'nautical_dusk'
      - condition: state
        entity_id: sensor.daylight
        state: 'night_start'
  action:
    service: light.turn_on
    data:
      entity_id: light.tripod_lamp
      brightness_pct: 80
      kelvin: 2700
      transition: 30

# MEDIA ROOM LIGHTS #

- alias: "Set media room temperature and brightness in the morning and day"
  trigger:
    platform: state
    entity_id: light.media_room_light_1
    to: 'on'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: sensor.daylight
        state: 'night_end'
      - condition: state
        entity_id: sensor.daylight
        state: 'nautical_dawn'
      - condition: state
        entity_id: sensor.daylight
        state: 'dawn'
      - condition: state
        entity_id: sensor.daylight
        state: 'sunrise_start'
      - condition: state
        entity_id: sensor.daylight
        state: 'sunrise_end'
      - condition: state
        entity_id: sensor.daylight
        state: 'golden_hour_1'
      - condition: state
        entity_id: sensor.daylight
        state: 'solar_noon'
  action:
    service: light.turn_on
    data:
      entity_id: light.media_room
      brightness_pct: 100
      kelvin: 4000

- alias: "Set media room temperature and brightness in the evening"
  trigger:
    platform: state
    entity_id: light.media_room_light_1
    to: 'on'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: sensor.daylight
        state: 'golden_hour_2'
      - condition: state
        entity_id: sensor.daylight
        state: 'sunset_start'
      - condition: state
        entity_id: sensor.daylight
        state: 'sunset_end'
      - condition: state
        entity_id: sensor.daylight
        state: 'dusk'
      - condition: state
        entity_id: sensor.daylight
        state: 'night_start'
      - condition: state
        entity_id: sensor.daylight
        state: 'nautical_dusk'
      - condition: state
        entity_id: sensor.daylight
        state: 'nadir'
  action:
    service: light.turn_on
    data:
      entity_id: light.media_room
      brightness_pct: 20
      kelvin: 2200

# TURN OFF LIVING ROOM LIGHTS WHEN GOING TO BED #

- alias: "Turn off living room lights when going to bed"
  trigger: 
    platform: state
    entity_id: binary_sensor.presence_3
    to: 'on'
  condition:
    - condition: state
      entity_id: light.tripod_lamp
      state: 'on'
    - condition: time
      after: '21:00:00'
      before: '23:59:00'
  action:
    service: light.turn_off
    data:
      entity_id: light.living_room
      transition: 1800

# TURN ON TRIPOD LAMP FOR 5 MINS DURING THE NIGHT IF COMING DOWNSTAIRS #
- alias: "Turn on tripod lamp for 5 mins during the night if coming downstairs"
  trigger: 
    platform: state
    entity_id: binary_sensor.presence_3
    to: 'on'
  condition:
    - condition: state
      entity_id: light.tripod_lamp
      state: 'off'
    - condition: time
      after: '21:00:00'
      before: '23:59:00'
  action:
    - service: light.turn_on
      data:
        entity_id: light.tripod_lamp
        brightness_pct: 50
        kelvin: 2200
        transition: 15
    - delay: '00:04:00'
    - service: light.turn_off
      data:
        entity_id: light.tripod_lamp
        transition: 15

# COMING HOME DURING THE NIGHT #
- alias: "Turn on tripod lamp for 10 minutes when coming home during the night"
  trigger: 
    - platform: state
      entity_id: person.tuomas_pakkanen
      to: 'home'
    - platform: state
      entity_id: person.moona
      to: 'home'
  condition:
    condition: time
    after: '00:10:00'
    before: '05:00:00'
  action:
    - service: light.turn_on
      data:
        entity_id: light.tripod_lamp
        brightness_pct: 50
        kelvin: 2200
        transition: 15
    - delay: '00:10:00'
    - service: light.turn_off
      data:
        entity_id: light.tripod_lamp
        transition: 15

# TURN OFF LGIHTS WHEN LEAVING HOME #

- alias: "Turn off lights when nobody is home"
  trigger:
    - platform: state
      entity_id: person.tuomas_pakkanen
      to: 'not_home'
    - platform: state
      entity_id: person.moona
      to: 'not_home'
  condition:
    - condition: state
      entity_id: person.tuomas_pakkanen
      state: 'not_home'
    - condition: state
      entity_id: person.moona
      state: 'not_home'
  action:
    service: light.turn_off
    data:
      entity_id: light.living_room


### AIR CONDITIONER AUTOMATIONS ###

# TURN ON AC #

- alias: "Turn on AC when it's too hot or cold"
  trigger:
    - platform: numeric_state
      entity_id: sensor.mi_t_582d34345074
      below: 22.6 #19
      for: "00:10:00"
    - platform: numeric_state
      entity_id: sensor.mi_t_582d34345074
      above: 30 # 25 degrees during Summer, hotter during winter due to fireplace
      for: "00:10:00"
  action:
    - service: notify.discord
      data:
        message: "AC turning ON! Current temperature is {{ states('sensor.mi_t_582d34345074') }}°C"
        target: ["645569766626689065"]
    - service: climate.set_temperature
      entity_id: climate.melcloud_living_room_177727
      data:
        temperature: '23'
    - service: climate.set_fan_mode
      entity_id: climate.melcloud_living_room_177727
      data:
        fan_mode: 'Speed Auto'
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.melcloud_living_room_177727
        hvac_mode: 'auto'
    - service: climate.set_swing_mode
      entity_id: climate.melcloud_living_room_177727
      data:
        swing_mode: 'Auto'

# TURN AC OFF #

- alias: "Turn off AC when target temperature is reached"
  trigger:
    platform: numeric_state
    entity_id: sensor.mi_t_582d34345074
    below: 26 #24
    above: 23 #22
    for: "01:00:00"
  condition:
    condition: state
    entity_id: climate.melcloud_living_room_177727
    state: 'auto'
  action:
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.melcloud_living_room_177727
        hvac_mode: 'off'
    - service: notify.discord
      data:
        message: "AC turning OFF! Current temperature is {{ states('sensor.mi_t_582d34345074') }}°C"
        target: ["645569766626689065"]

### THEME ###

- alias: 'Set theme at startup'
  trigger:
    - platform: homeassistant
      event: start
  action:
    service: frontend.set_theme
    data:
      name: ios-dark-mode

### NOTIFICATIONS ###

# ROOMBA #

- alias: "Roomba notifications"
  trigger:
    - platform: state
      entity_id: vacuum.roomba
      from: "off"
      to: "on"
      for: "00:02:00"
    - platform: state
      entity_id: vacuum.roomba
      from: "on"
      to: "off"
      for: "00:02:00"
  action:
    - service: notify.discord
      data:
        message: "Roomba is now {{ states.vacuum.roomba.attributes.status }}"
        target: ["645569708363481088"]

# SYSTEM #

- alias: "Health check"
  trigger:
    platform: time_pattern
    minutes: "/15"
  action:
    service: rest_command.health_check

- alias: "CPU Temperature too high"
  trigger:
    platform: numeric_state
    entity_id: sensor.cpu_temperature
    above: 75
    for: "00:02:00"
  action:
    service: notify.telegram
    data:
      title: "System alert!"
      message: "Raspberry Pi CPU temperature critical! Current temperature is {{ states('sensor.cpu_temperature') }}°C"

- alias: "Disk usage exceeded 80 percent"
  trigger:
    platform: numeric_state
    entity_id: sensor.disk_use_percent
    above: 80.0
  action:
    service: notify.telegram
    data:
      title: "System alert!"
      message: "Raspberry Pi free disk space running low!"

- alias: "Xiaomi temperature sensor battery low"
  trigger:
    platform: numeric_state
    entity_id: sensor.living_room_sensor_battery
    below: 15
  action:
    service: notify.telegram
    data:
      title: '*Battery low alert!*'
      message: "Xiaomi Mijia temperature and humidity sensor battery is running low. Please replace the battery."