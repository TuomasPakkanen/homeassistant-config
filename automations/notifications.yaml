# SAMPO WOKE UP #

- alias: "Notify when Sampo woke up"
  trigger:
    platform: state
    entity_id: binary_sensor.sampos_room
    to: 'on'
  condition:
    - condition: time
      after: "06:00:00"
      before: "9:30:00"
    - condition: state
      entity_id: input_boolean.sleeping
      state: 'on'
  action:
    - service: tts.google_translate_say
      entity_id: media_player.google_home
      data:
        message: 'Sampo on hereillä!'
        language: 'fi'
    - service: automation.turn_off
      entity_id: automation.notify_when_sampo_woke_up

# SAUNA #

- alias: "Notify when Sauna is warm"
  trigger:
    platform: numeric_state
    entity_id: sensor.sauna
    above: 44
    for: '00:02:00'
  action:
    service: tts.google_translate_say
    entity_id: media_player.kitchen_display
    data:
      message: 'Sauna on lämmin!'
      language: 'fi'

# MOONA TO HOME #

- alias: "Notify when Moona left the airport"
  trigger:
    platform: state
    entity_id: person.moona
    from: 'Airport'
  condition: 
    condition: template
    value_template: '{{ is_state_attr("sensor.iphone_moona_geocoded_location", "Country", "Suomi") }}'
  action:
    - service: notify.telegram
      data:
        message: "Moona is coming home"
    - service: automation.turn_off
      entity_id: automation.flash_bedroom_lights_if_either_door_is_opened_during_the_night
    - delay: '00:30:00'
    - service: automation.turn_on
      entity_id: automation.flash_bedroom_lights_if_either_door_is_opened_during_the_night

# BURGLAR ALARM #

- alias: "Burglar alarm"
  trigger: 
    platform: state
    entity_id:
      - binary_sensor.frontdoor
      - binary_sensor.backdoor
    to: 'on'
  condition:
    condition: state
    entity_id: binary_sensor.occupancy
    state: 'off'
  action:
    - delay: '00:02:00'
    - condition: state
      entity_id: binary_sensor.occupancy
      state: 'off'
    - service: notify.telegram
      data:
        title: "Burglar alarm triggered!"
        message: "{{ trigger.to_state.attributes.friendly_name }} has been opened!"

# AIR CONDITIONER ENERGY USAGE MONTHLY REPORTING

- alias: "Report AC energy usage"
  trigger:
    platform: time
    at: '17:00:00'
  condition:
    condition: template
    value_template: "{{ now().day == 1 }}"
  action:
    service: notify.telegram
    data_template:
      title: "Here's the cumulative air conditioner energy usage"
      message: "{{ states('sensor.air_conditioner_energy') }} kWh"

# SYSTEM #

- alias: "Health check"
  trigger:
    platform: time_pattern
    minutes: "/15"
  action:
    service: rest_command.health_check

- alias: "CPU Temperature too high"
  trigger:
    platform: numeric_state
    entity_id: sensor.cpu_temperature
    above: 75
    for: "00:02:00"
  action:
    service: notify.telegram
    data:
      title: "System alert!"
      message: "Raspberry Pi CPU temperature critical! Current temperature is {{ states('sensor.cpu_temperature') }}°C"

- alias: "Disk usage exceeded 80 percent"
  trigger:
    platform: numeric_state
    entity_id: sensor.disk_use_percent
    above: 80.0
  action:
    service: notify.telegram
    data:
      title: "System alert!"
      message: "Raspberry Pi free disk space running low!"

# BATTERY WARNINGS #

- alias: "Xiaomi temperature sensor battery low"
  trigger:
    platform: numeric_state
    entity_id: sensor.living_room_sensor_battery
    below: 15
  action:
    service: notify.telegram
    data:
      title: '*Battery low alert!*'
      message: "Xiaomi Mijia temperature and humidity sensor battery is running low. Please replace the battery."

- alias: "Hue motion sensor battery low"
  trigger:
    platform: numeric_state
    entity_id: sensor.stairs_motion_sensor_battery_level
    below: 15
  action:
    service: notify.telegram
    data:
      title: '*Battery low alert!*'
      message: "Hue motion sensor battery is running low. Please replace the battery."